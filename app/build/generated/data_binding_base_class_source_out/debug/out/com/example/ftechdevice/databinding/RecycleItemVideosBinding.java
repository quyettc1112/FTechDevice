// Generated by view binder compiler. Do not edit!
package com.example.ftechdevice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ftechdevice.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecycleItemVideosBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imVideo;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final TextView tvVideoDescription;

  @NonNull
  public final TextView tvVideoHeader;

  private RecycleItemVideosBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imVideo,
      @NonNull LinearLayout layout, @NonNull TextView tvVideoDescription,
      @NonNull TextView tvVideoHeader) {
    this.rootView = rootView;
    this.imVideo = imVideo;
    this.layout = layout;
    this.tvVideoDescription = tvVideoDescription;
    this.tvVideoHeader = tvVideoHeader;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecycleItemVideosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecycleItemVideosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycle_item_videos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecycleItemVideosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.im_video;
      ImageView imVideo = ViewBindings.findChildViewById(rootView, id);
      if (imVideo == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.tv_video_description;
      TextView tvVideoDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoDescription == null) {
        break missingId;
      }

      id = R.id.tv_video_header;
      TextView tvVideoHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoHeader == null) {
        break missingId;
      }

      return new RecycleItemVideosBinding((ConstraintLayout) rootView, imVideo, layout,
          tvVideoDescription, tvVideoHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
