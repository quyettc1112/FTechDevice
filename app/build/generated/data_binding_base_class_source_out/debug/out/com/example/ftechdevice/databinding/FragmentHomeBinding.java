// Generated by view binder compiler. Do not edit!
package com.example.ftechdevice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ftechdevice.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final EditText edtSearch;

  @NonNull
  public final LinearLayout horizontalLayout;

  @NonNull
  public final ImageView imNotify;

  @NonNull
  public final LinearLayout indicatorContainer;

  @NonNull
  public final LinearLayout llBanphim;

  @NonNull
  public final LinearLayout llDienthoai;

  @NonNull
  public final LinearLayout llLaptop;

  @NonNull
  public final LinearLayout llManhinh;

  @NonNull
  public final RecyclerView myRecyclerView;

  @NonNull
  public final RecyclerView rvToys;

  @NonNull
  public final RecyclerView rvVideo;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textViewTimeFlashSale;

  @NonNull
  public final TextView tvSeeAllCategory;

  @NonNull
  public final TextView tvSeeAllVideo;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout, @NonNull ConstraintLayout constraintLayout3,
      @NonNull EditText edtSearch, @NonNull LinearLayout horizontalLayout,
      @NonNull ImageView imNotify, @NonNull LinearLayout indicatorContainer,
      @NonNull LinearLayout llBanphim, @NonNull LinearLayout llDienthoai,
      @NonNull LinearLayout llLaptop, @NonNull LinearLayout llManhinh,
      @NonNull RecyclerView myRecyclerView, @NonNull RecyclerView rvToys,
      @NonNull RecyclerView rvVideo, @NonNull TextView textView, @NonNull TextView textView3,
      @NonNull TextView textView4, @NonNull TextView textView5,
      @NonNull TextView textViewTimeFlashSale, @NonNull TextView tvSeeAllCategory,
      @NonNull TextView tvSeeAllVideo) {
    this.rootView = rootView;
    this.constraintLayout = constraintLayout;
    this.constraintLayout3 = constraintLayout3;
    this.edtSearch = edtSearch;
    this.horizontalLayout = horizontalLayout;
    this.imNotify = imNotify;
    this.indicatorContainer = indicatorContainer;
    this.llBanphim = llBanphim;
    this.llDienthoai = llDienthoai;
    this.llLaptop = llLaptop;
    this.llManhinh = llManhinh;
    this.myRecyclerView = myRecyclerView;
    this.rvToys = rvToys;
    this.rvVideo = rvVideo;
    this.textView = textView;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textViewTimeFlashSale = textViewTimeFlashSale;
    this.tvSeeAllCategory = tvSeeAllCategory;
    this.tvSeeAllVideo = tvSeeAllVideo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.edt_search;
      EditText edtSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.horizontal_layout;
      LinearLayout horizontalLayout = ViewBindings.findChildViewById(rootView, id);
      if (horizontalLayout == null) {
        break missingId;
      }

      id = R.id.im_notify;
      ImageView imNotify = ViewBindings.findChildViewById(rootView, id);
      if (imNotify == null) {
        break missingId;
      }

      id = R.id.indicatorContainer;
      LinearLayout indicatorContainer = ViewBindings.findChildViewById(rootView, id);
      if (indicatorContainer == null) {
        break missingId;
      }

      id = R.id.llBanphim;
      LinearLayout llBanphim = ViewBindings.findChildViewById(rootView, id);
      if (llBanphim == null) {
        break missingId;
      }

      id = R.id.llDienthoai;
      LinearLayout llDienthoai = ViewBindings.findChildViewById(rootView, id);
      if (llDienthoai == null) {
        break missingId;
      }

      id = R.id.llLaptop;
      LinearLayout llLaptop = ViewBindings.findChildViewById(rootView, id);
      if (llLaptop == null) {
        break missingId;
      }

      id = R.id.llManhinh;
      LinearLayout llManhinh = ViewBindings.findChildViewById(rootView, id);
      if (llManhinh == null) {
        break missingId;
      }

      id = R.id.my_recycler_view;
      RecyclerView myRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (myRecyclerView == null) {
        break missingId;
      }

      id = R.id.rv_toys;
      RecyclerView rvToys = ViewBindings.findChildViewById(rootView, id);
      if (rvToys == null) {
        break missingId;
      }

      id = R.id.rv_video;
      RecyclerView rvVideo = ViewBindings.findChildViewById(rootView, id);
      if (rvVideo == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView_time_flashSale;
      TextView textViewTimeFlashSale = ViewBindings.findChildViewById(rootView, id);
      if (textViewTimeFlashSale == null) {
        break missingId;
      }

      id = R.id.tv_seeAll_Category;
      TextView tvSeeAllCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvSeeAllCategory == null) {
        break missingId;
      }

      id = R.id.tv_seeAll_video;
      TextView tvSeeAllVideo = ViewBindings.findChildViewById(rootView, id);
      if (tvSeeAllVideo == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, constraintLayout,
          constraintLayout3, edtSearch, horizontalLayout, imNotify, indicatorContainer, llBanphim,
          llDienthoai, llLaptop, llManhinh, myRecyclerView, rvToys, rvVideo, textView, textView3,
          textView4, textView5, textViewTimeFlashSale, tvSeeAllCategory, tvSeeAllVideo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
