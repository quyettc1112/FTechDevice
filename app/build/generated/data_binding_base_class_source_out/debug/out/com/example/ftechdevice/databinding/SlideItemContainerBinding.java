// Generated by view binder compiler. Do not edit!
package com.example.ftechdevice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ftechdevice.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SlideItemContainerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView introDecorSplash;

  @NonNull
  public final TextView introDescription;

  @NonNull
  public final ImageView introImage;

  @NonNull
  public final TextView introTitle;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final ConstraintLayout main;

  private SlideItemContainerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView introDecorSplash, @NonNull TextView introDescription,
      @NonNull ImageView introImage, @NonNull TextView introTitle,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout4,
      @NonNull ConstraintLayout main) {
    this.rootView = rootView;
    this.introDecorSplash = introDecorSplash;
    this.introDescription = introDescription;
    this.introImage = introImage;
    this.introTitle = introTitle;
    this.linearLayout = linearLayout;
    this.linearLayout4 = linearLayout4;
    this.main = main;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SlideItemContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SlideItemContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.slide_item_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SlideItemContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.intro_decor_splash;
      ImageView introDecorSplash = ViewBindings.findChildViewById(rootView, id);
      if (introDecorSplash == null) {
        break missingId;
      }

      id = R.id.intro_description;
      TextView introDescription = ViewBindings.findChildViewById(rootView, id);
      if (introDescription == null) {
        break missingId;
      }

      id = R.id.intro_image;
      ImageView introImage = ViewBindings.findChildViewById(rootView, id);
      if (introImage == null) {
        break missingId;
      }

      id = R.id.intro_title;
      TextView introTitle = ViewBindings.findChildViewById(rootView, id);
      if (introTitle == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      return new SlideItemContainerBinding((ConstraintLayout) rootView, introDecorSplash,
          introDescription, introImage, introTitle, linearLayout, linearLayout4, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
