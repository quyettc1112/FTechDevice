// Generated by view binder compiler. Do not edit!
package com.example.ftechdevice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ftechdevice.AppConfig.CustomView.CustomToolBar.CustomToolbar;
import com.example.ftechdevice.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText edtSearch;

  @NonNull
  public final ImageView imFillter;

  @NonNull
  public final LinearLayout linearLayout11;

  @NonNull
  public final RecyclerView myRecyclerView;

  @NonNull
  public final RecyclerView rvToys;

  @NonNull
  public final CustomToolbar toolblarCustome;

  private FragmentProductBinding(@NonNull ConstraintLayout rootView, @NonNull EditText edtSearch,
      @NonNull ImageView imFillter, @NonNull LinearLayout linearLayout11,
      @NonNull RecyclerView myRecyclerView, @NonNull RecyclerView rvToys,
      @NonNull CustomToolbar toolblarCustome) {
    this.rootView = rootView;
    this.edtSearch = edtSearch;
    this.imFillter = imFillter;
    this.linearLayout11 = linearLayout11;
    this.myRecyclerView = myRecyclerView;
    this.rvToys = rvToys;
    this.toolblarCustome = toolblarCustome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edt_search;
      EditText edtSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.im_fillter;
      ImageView imFillter = ViewBindings.findChildViewById(rootView, id);
      if (imFillter == null) {
        break missingId;
      }

      id = R.id.linearLayout11;
      LinearLayout linearLayout11 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout11 == null) {
        break missingId;
      }

      id = R.id.my_recycler_view;
      RecyclerView myRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (myRecyclerView == null) {
        break missingId;
      }

      id = R.id.rv_toys;
      RecyclerView rvToys = ViewBindings.findChildViewById(rootView, id);
      if (rvToys == null) {
        break missingId;
      }

      id = R.id.toolblarCustome;
      CustomToolbar toolblarCustome = ViewBindings.findChildViewById(rootView, id);
      if (toolblarCustome == null) {
        break missingId;
      }

      return new FragmentProductBinding((ConstraintLayout) rootView, edtSearch, imFillter,
          linearLayout11, myRecyclerView, rvToys, toolblarCustome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
